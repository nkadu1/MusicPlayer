package io.theorem.helloworld.resources;

import java.util.List;
import java.util.concurrent.atomic.AtomicLong;

import javax.ws.rs.Consumes;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;

import com.google.inject.Inject;

import io.theorem.albums.entity.Album;
import io.theorem.albums.service.AlbumService;
import io.theorem.albums.service.ArtistService;
import io.theorem.albums.service.SongService;
import javax.ws.rs.*;

@Path("/hello-world")

public class HelloWorldResource {
	private final String template;
	private final String defaultName;
	private final AtomicLong counter;

	
	@Inject
	private AlbumService albumservice = null;
	@Inject
	private SongService songservice = null;
	@Inject
	private ArtistService artistservice = null;
	
	public HelloWorldResource(String template, String defaultName) {
		System.out.println("template here " + template);
		System.out.println("default name " + defaultName);
		this.template = template;
		this.defaultName = defaultName;
		this.counter = new AtomicLong();
	}

	@POST
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public Album createAlbum(Album mv) {
		return albumservice.createAlbum(mv);
	}

	@GET
	@Produces(MediaType.APPLICATION_JSON)
	public List<Album> findAllAlbums() {
		return albumservice.findAllAlbums();
	}

	@PUT
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	@Path("{albumId}")
	public Album update(@PathParam("albumId") String id){
		return albumservice.update(albumId, null);
	}
	
	@DELETE
	@Consumes(MediaType.APPLICATION_JSON)
	public void delete(@PathParam("albumId") String albumId){
		albumservice.delete(albumId);
	}

	
	
}